import requests                     # !pip install requests
import json                         # !pip install json
from dotenv import dotenv_values    # !pip install python-dotenv


def get_generations_by_user_id(userid, offset, limit, bearer):

    url = f"https://cloud.leonardo.ai/api/rest/v1/generations/user/{userid}?offset={offset}&limit={limit}"

    headers = {
        "accept": "application/json",
        "authorization": f"Bearer {bearer}"
    }
    response = requests.get(url, headers=headers)

    print(f'Last image generated by Leonardo')
    generations = json.loads(response.text)["generations"]
    # print(f'--> generations[0]: {generations[0]}')
    prompt = generations[0]["prompt"]
    modelId = generations[0]["modelId"]

    negativePrompt = generations[0]["negativePrompt"]
    imageWidth = generations[0]["imageWidth"]
    imageHeight = generations[0]["imageHeight"]
    sdVersion = generations[0]["sdVersion"]
    guidancescale = generations[0]["guidanceScale"]
    scheduler = generations[0]["scheduler"]
    presetStyle = generations[0]["presetStyle"]
    inferenceSteps = generations[0]["inferenceSteps"]
    seed = generations[0]["seed"]
    public = generations[0]["public"]
    status = generations[0]["status"]
    initStrength = generations[0]["initStrength"]
    promptMagic = True

    jstring = 'payload = {' + \
        f'"prompt":"{prompt}",' + \
        f'"seed":{seed},' + \
        f'"initStrength":{initStrength},' +\
        f'"status":"{status}",' +\
        f'"modelId":"{modelId}",' +\
        f'"negative_prompt":"{negativePrompt}",' +\
        f'"width": {imageWidth},' +\
        f'"height": {imageHeight},' +\
        f'"sd_version":"{sdVersion}",' +\
        f'"num_images": 4,' +\
        f'"num_inference_steps":{inferenceSteps},' +\
        f'"guidance_scale": {guidancescale},' +\
        f'"scheduler": "{scheduler}",' +\
        f'"presetStyle": "{presetStyle}",' +\
        f'"public": {public},' +\
        f'"promptMagic": {promptMagic}' +\
        '}'
    print(f'--> jstring: {jstring}')

    generated_images = generations[0]["generated_images"]
    idx = 0
    for gen_img in generated_images:
        print(f'------------')
        print(f'----> idx: {idx}')
        image_id = gen_img["id"]
        print(f'----> image_id: {image_id}')
        url = gen_img["url"]
        print(f'----> url: {url}')
        nsfw = gen_img["nsfw"]
        print(f'----> nsfw: {nsfw}')
        likeCount = gen_img["likeCount"]
        print(f'----> likeCount: {likeCount}')
        generated_image_variation_generics = gen_img["generated_image_variation_generics"]
        print(
            f'----> generated_image_variation_generics count: {len(generated_image_variation_generics)}')
        idx += 1


def last_pic():
    get_generations_by_user_id(userid, 0, 1, bearer)


config = dotenv_values(".env")
bearer = config["LEO_KEY"]
userid = config["LEO_USERID"]

if __name__ == "__main__":
    last_pic()
